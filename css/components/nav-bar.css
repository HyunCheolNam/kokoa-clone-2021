.nav{
    background-color: #f9f9fa;
    padding: 20px 50px;
    border-top: 1px solid rgba(121,121,121,0.2);
    position: fixed;
    bottom: 0;
    width: 100%;
    /* CSS는 width 를 측정할때 width + padding + margin 으로 측정한다. 하지만 box-sizing: border:-box; 를 해주면 width = (padding+margin)을
    제외한 나머지 부분을 width 로 정한다. 즉 처음에 정해진 width의 범위를 200으로 했다면 padding 을 50을 주면 250이 되지만 box-sizing: border-box를 하면
    200(padding50 + content150)이 된다.;;*/
    box-sizing: border-box;
}

.nav__list{
    display: flex;
    justify-content: space-between;
}
.nav__link{
    position: relative;
}

.nav__notification-chat{
    background-color: tomato;
    display: block;
    width: 30px;
    height: 30px;
    border-radius: 15px;
    /* nav_notification이 span이라서 width, height를 입력해도 변하지 않는다 따라서  display 를 설정 해주면 span도 width, height를 가진다.*/
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-weight: 600;

    /*span을 img위에 올리기 위해서 position을 만져준다*/
    /* position : absolute는 가장 가까운 relative를 가진 부모 기준으로 움직인다. 따라서 nav__notification의 바로 직속 부모인 nav__list를 
    position : relative로 바꿔주어야한다. 그렇지 않으면 nav의 body를 기준으로 움직인다.*/
    position: absolute;
    left: 15px;
    bottom: 13px;
}

.nav__notification-end{
    background-color: tomato;
    display: block;
    /* nav_notification이 span이라서 width, height를 입력해도 변하지 않는다 따라서  display 를 설정 해주면 span도 width, height를 가진다.*/
    display: flex;
    width: 6px;
    height: 6px;
    border-radius: 3px;
    justify-content: center;
    align-items: center;
    color: tomato;
    font-weight: 600;

    /*span을 img위에 올리기 위해서 position을 만져준다*/
    /* position : absolute는 가장 가까운 relative를 가진 부모 기준으로 움직인다. 따라서 nav__notification의 바로 직속 부모인 nav__list를 
    position : relative로 바꿔주어야한다. 그렇지 않으면 nav의 body를 기준으로 움직인다.*/
    position: absolute;
    left: 29px;
    bottom: 20px;
}
